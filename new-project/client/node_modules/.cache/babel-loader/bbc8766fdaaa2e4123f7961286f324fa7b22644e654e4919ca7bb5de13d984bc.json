{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\react-workspace\\\\new-project\\\\client\\\\src\\\\Component\\\\Emoji.js\",\n  _s = $RefreshSig$();\n//Emogi.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmogiBoard = () => {\n  _s();\n  const [board] = useState(generateBoard());\n  function generateBoard() {\n    const emogis = ['üçï', 'üéâ', 'üéà', 'üåü', 'üöÄ', 'üê±', 'üåà', 'üç¶', 'üé∏'];\n    const boardSize = 3;\n    const suffleEmogi = emogis;\n    const board = [];\n    for (let i = 0; i < boardSize; i++) {\n      const row = suffleEmogi.slice(i * boardSize, (i + 1) * boardSize);\n      board.push(row);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: row.map((emogi, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: emogi\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(EmogiBoard, \"v3dUuCaDKgv4IW/d93tprLo4uG0=\");\n_c = EmogiBoard;\nexport default EmogiBoard;\nvar _c;\n$RefreshReg$(_c, \"EmogiBoard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmogiBoard","_s","board","generateBoard","emogis","boardSize","suffleEmogi","i","row","slice","push","children","map","rowIndex","className","emogi","columnIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user1/react-workspace/new-project/client/src/Component/Emoji.js"],"sourcesContent":["//Emogi.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst EmogiBoard = () => {\r\n  const [board] = useState(generateBoard());\r\n\r\n  function generateBoard() {\r\n    const emogis = ['üçï', 'üéâ', 'üéà', 'üåü', 'üöÄ', 'üê±', 'üåà', 'üç¶', 'üé∏'];\r\n    const boardSize = 3;\r\n    const suffleEmogi = emogis;\r\n    const board = [];\r\n\r\n    for (let i = 0; i < boardSize; i++) {\r\n      const row = suffleEmogi.slice(i * boardSize, (i + 1) * boardSize);\r\n      board.push(row);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {board.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=''>\r\n          {row.map((emogi, columnIndex) => (\r\n            <div key={columnIndex}>{emogi}</div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmogiBoard;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,CAAC,GAAGN,QAAQ,CAACO,aAAa,CAAC,CAAC,CAAC;EAEzC,SAASA,aAAaA,CAAA,EAAG;IACvB,MAAMC,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACrE,MAAMC,SAAS,GAAG,CAAC;IACnB,MAAMC,WAAW,GAAGF,MAAM;IAC1B,MAAMF,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;MAClC,MAAMC,GAAG,GAAGF,WAAW,CAACG,KAAK,CAACF,CAAC,GAAGF,SAAS,EAAE,CAACE,CAAC,GAAG,CAAC,IAAIF,SAAS,CAAC;MACjEH,KAAK,CAACQ,IAAI,CAACF,GAAG,CAAC;IACjB;EACF;EACA,oBACET,OAAA;IAAAY,QAAA,EACGT,KAAK,CAACU,GAAG,CAAC,CAACJ,GAAG,EAAEK,QAAQ,kBACvBd,OAAA;MAAoBe,SAAS,EAAC,EAAE;MAAAH,QAAA,EAC7BH,GAAG,CAACI,GAAG,CAAC,CAACG,KAAK,EAAEC,WAAW,kBAC1BjB,OAAA;QAAAY,QAAA,EAAwBI;MAAK,GAAnBC,WAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CACpC;IAAC,GAHMP,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzBID,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}